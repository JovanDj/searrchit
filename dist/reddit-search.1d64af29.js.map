{"version":3,"sources":["reddit-api.js","index.js"],"names":["search","searchTerm","searchLimit","sortBy","fetch","then","res","json","data","children","map","catch","err","console","log","searchForm","document","getElementById","searchInput","showSearchTerm","searchTermBadge","querySelector","remove","createElement","className","id","appendChild","createTextNode","showMessage","message","div","searchContainer","insertBefore","setTimeout","truncateText","text","limit","shortened","indexOf","substring","addEventListener","e","value","results","output","forEach","post","image","preview","images","source","url","title","selftext","subreddit","score","innerHTML","preventDefault"],"mappings":";AAAA,aAEe,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EAAA,IAAA,EAAA,CACbA,OAAQ,SAASC,EAAYC,EAAaC,GACjCC,OAAAA,MACmCH,wCAAAA,OAAAA,EAAmBE,UAAAA,OAAAA,EAAgBD,WAAAA,OAAAA,IAE1EG,KAAK,SAAAC,GAAOA,OAAAA,EAAIC,SAChBF,KAAK,SAAAG,GAAQA,OAAAA,EAAKA,KAAKC,SAASC,IAAI,SAAAF,GAAQA,OAAAA,EAAKA,SACjDG,MAAM,SAAAC,GAAOC,OAAAA,QAAQC,IAAIF,OAPjB,QAAA,QAAA;;ACFf,aAEA,IAAA,EAAA,EAAA,QAAA,iBA0HC,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GAxHD,IAAMG,EAAaC,SAASC,eAAe,eACrCC,EAAcF,SAASC,eAAe,gBAsE5C,SAASE,EAAelB,GAClBmB,IAAAA,EAAkBJ,SAASK,cAAc,uBACzCD,GACFA,EAAgBE,UAGlBF,EAAkBJ,SAASO,cAAc,SACzBC,UAAY,sBAC5BJ,EAAgBK,GAAK,qBACrBL,EAAgBM,YAAYV,SAASW,eAAe1B,IACpDe,SAASC,eAAe,iBAAiBS,YAAYN,GAIvD,SAASQ,EAAYC,EAASL,GAGtBM,IAAAA,EAAMd,SAASO,cAAc,OAGnCO,EAAIN,UAAqBA,SAAAA,OAAAA,GAGzBM,EAAIJ,YAAYV,SAASW,eAAeE,IAGlCE,IAAAA,EAAkBf,SAASC,eAAe,oBAG1CjB,EAASgB,SAASC,eAAe,UAGvCc,EAAgBC,aAAaF,EAAK9B,GAGlCiC,WAAW,WACTjB,SAASK,cAAc,UAAUC,UAChC,KAIL,SAASY,EAAaC,EAAMC,GACpBC,IAAAA,EAAYF,EAAKG,QAAQ,IAAKF,GAEhCC,OAAc,GAAdA,EACKF,EAGFA,EAAKI,UAAU,EAAGF,GAnH3BtB,EAAWyB,iBAAiB,SAAU,SAAAC,GAE9BxC,IAAAA,EAAaiB,EAAYwB,MAGzBvC,EAASa,SAASK,cAAc,gCAAgCqB,MAGhExC,EAAcc,SAASC,eAAe,SAASyB,MAGlC,KAAfzC,GAGF2B,EAAY,2BAA4B,gBAI1CV,EAAYwB,MAAQ,GAGpBvB,EAAelB,GAERD,EAAAA,QAAAA,OAAOC,EAAYC,EAAaC,GAAQE,KAAK,SAAAsC,GAC9CC,IAAAA,EAAS,6BAGbD,EAAQE,QAAQ,SAAAC,GAEVC,IAAAA,EAAQD,EAAKE,QACbF,EAAKE,QAAQC,OAAO,GAAGC,OAAOC,IAC9B,mEAEJP,GAEgBG,6DAAAA,OAAAA,EAEeD,mGAAAA,OAAAA,EAAKM,MACPlB,4CAAAA,OAAAA,EAAaY,EAAKO,SAAU,KAEjDP,+BAAAA,OAAAA,EAAKK,IAMLL,8IAAAA,OAAAA,EAAKQ,UAGiCR,iEAAAA,OAAAA,EAAKS,MAhBnD,uDAsBFX,GAAU,SAEV5B,SAASC,eAAe,WAAWuC,UAAYZ,IAMjDH,EAAEgB","file":"reddit-search.1d64af29.js","sourceRoot":"..","sourcesContent":["\"use strict\";\n\nexport default {\n  search: function(searchTerm, searchLimit, sortBy) {\n    return fetch(\n      `https://www.reddit.com/search.json?q=${searchTerm}&sort=${sortBy}&limit=${searchLimit}`\n    )\n      .then(res => res.json())\n      .then(data => data.data.children.map(data => data.data))\n      .catch(err => console.log(err));\n  }\n};\n","\"use strict\";\n\nimport reddit from \"./reddit-api\";\n\nconst searchForm = document.getElementById(\"search-form\");\nconst searchInput = document.getElementById(\"search-input\");\n\n// Form Event Listener\nsearchForm.addEventListener(\"submit\", e => {\n  // Get search term\n  const searchTerm = searchInput.value;\n\n  // Get sort\n  const sortBy = document.querySelector('input[name=\"sortby\"]:checked').value;\n\n  // Get limit\n  const searchLimit = document.getElementById(\"limit\").value;\n\n  // Check input\n  if (searchTerm === \"\") {\n    // Show message\n\n    showMessage(\"Please add a search term\", \"alert-danger\");\n  }\n\n  // Clear input\n  searchInput.value = \"\";\n\n  // Show searched term\n  showSearchTerm(searchTerm);\n\n  reddit.search(searchTerm, searchLimit, sortBy).then(results => {\n    let output = '<div class=\"card-columns\">';\n    // Loop through posts\n\n    results.forEach(post => {\n      // Check for image\n      let image = post.preview\n        ? post.preview.images[0].source.url\n        : \"https://upload.wikimedia.org/wikipedia/fi/0/0e/Reddit_-_logo.png\";\n\n      output += `\n        <div class=\"card fade-in\">\n          <img src=\"${image}\" class=\"card-img-top\">\n          <div class=\"card-body\">\n            <h5 class=\"card-title\">${post.title}</h5>\n            <p class=\"card-text\">${truncateText(post.selftext, 100)}</p>\n            <a href=\"${\n              post.url\n            }\" target=\"_blank\" class=\"btn btn-primary\">Read more</a>\n\n            <hr>\n\n            <span class=\"badge badge-secondary\">Subreddit: ${\n              post.subreddit\n            }</span>\n\n            <span class=\"badge badge-dark\">Score: ${post.score}</span>\n          </div>\n        </div>\n      `;\n    });\n\n    output += \"</div>\";\n\n    document.getElementById(\"results\").innerHTML = output;\n  });\n\n  // Search Reddit\n\n  // Prevent form from submiting\n  e.preventDefault();\n});\n\n// Show Search Term\nfunction showSearchTerm(searchTerm) {\n  let searchTermBadge = document.querySelector(\"#chosen-search-term\");\n  if (searchTermBadge) {\n    searchTermBadge.remove();\n  }\n\n  searchTermBadge = document.createElement(\"span\");\n  searchTermBadge.className = \"badge badge-primary\";\n  searchTermBadge.id = \"chosen-search-term\";\n  searchTermBadge.appendChild(document.createTextNode(searchTerm));\n  document.getElementById(\"search-header\").appendChild(searchTermBadge);\n}\n\n// Show Message\nfunction showMessage(message, className) {\n  // Create div\n\n  const div = document.createElement(\"div\");\n\n  // Add classes\n  div.className = `alert ${className}`;\n\n  // Add text\n  div.appendChild(document.createTextNode(message));\n\n  // Get parent\n  const searchContainer = document.getElementById(\"search-container\");\n\n  // Get search\n  const search = document.getElementById(\"search\");\n\n  // Insert message\n  searchContainer.insertBefore(div, search);\n\n  // Timeout alert\n  setTimeout(() => {\n    document.querySelector(\".alert\").remove();\n  }, 3000);\n}\n\n// Truncate Text\nfunction truncateText(text, limit) {\n  const shortened = text.indexOf(\" \", limit);\n\n  if (shortened == -1) {\n    return text;\n  }\n\n  return text.substring(0, shortened);\n}\n"]}